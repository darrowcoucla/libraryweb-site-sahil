<?php
/**
 * @file
 * Code for the UCLALIB Media Browser feature.
 */

include_once 'uclalib_media.features.inc';

/**
 * Implements hook_views_pre_view().
 */
function uclalib_media_views_pre_view(&$view, $display_id, $args) {
  if ($view->name == 'media_default') {
    // Add modified CSS.
    drupal_add_css(drupal_get_path('module', 'uclalib_media') . '/css/uclalib_media.theme.css', array('group' => CSS_THEME));
  }
}

/**
 * Implements hook_views_default_views_alter().
 *
 * Override the default media browser.
 */
function uclalib_media_views_default_views_alter(&$views) {
  if (array_key_exists('media_default', $views)) {
    $view = new view();
    $view->name = 'media_default';
    $view->description = 'Default view for the media browser library tab.';
    $view->tag = 'media, default';
    $view->base_table = 'file_managed';
    $view->human_name = 'Media browser';
    $view->core = 7;
    $view->api_version = '3.0';
    $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

    /* Display: Master */
    $handler = $view->new_display('default', 'Master', 'default');
    $handler->display->display_options['use_ajax'] = TRUE;
    $handler->display->display_options['use_more_always'] = FALSE;
    $handler->display->display_options['group_by'] = TRUE;
    $handler->display->display_options['access']['type'] = 'perm';
    $handler->display->display_options['access']['perm'] = 'view files';
    $handler->display->display_options['cache']['type'] = 'none';
    $handler->display->display_options['query']['type'] = 'views_query';
    $handler->display->display_options['query']['options']['query_tags'] = array(
      0 => 'media_browser',
    );
    $handler->display->display_options['exposed_form']['type'] = 'better_exposed_filters';
    $handler->display->display_options['pager']['type'] = 'full';
    $handler->display->display_options['pager']['options']['items_per_page'] = '18';
    $handler->display->display_options['pager']['options']['offset'] = '0';
    $handler->display->display_options['pager']['options']['id'] = '0';
    $handler->display->display_options['pager']['options']['quantity'] = '9';
    $handler->display->display_options['style_plugin'] = 'media_browser';
    /* No results behavior: Global: Text area */
    $handler->display->display_options['empty']['area']['id'] = 'area';
    $handler->display->display_options['empty']['area']['table'] = 'views';
    $handler->display->display_options['empty']['area']['field'] = 'area';
    $handler->display->display_options['empty']['area']['content'] = 'No files available.';
    $handler->display->display_options['empty']['area']['format'] = 'plain_text';
    /* Relationship: Entity Reference: Referenced Entity */
    $handler->display->display_options['relationships']['field_event_location_target_id']['id'] = 'field_event_location_target_id';
    $handler->display->display_options['relationships']['field_event_location_target_id']['table'] = 'field_data_field_event_location';
    $handler->display->display_options['relationships']['field_event_location_target_id']['field'] = 'field_event_location_target_id';
    /* Field: File: Name */
    $handler->display->display_options['fields']['filename']['id'] = 'filename';
    $handler->display->display_options['fields']['filename']['table'] = 'file_managed';
    $handler->display->display_options['fields']['filename']['field'] = 'filename';
    $handler->display->display_options['fields']['filename']['label'] = '';
    $handler->display->display_options['fields']['filename']['alter']['word_boundary'] = FALSE;
    $handler->display->display_options['fields']['filename']['alter']['ellipsis'] = FALSE;
    /* Sort criterion: File: Upload date */
    $handler->display->display_options['sorts']['timestamp']['id'] = 'timestamp';
    $handler->display->display_options['sorts']['timestamp']['table'] = 'file_managed';
    $handler->display->display_options['sorts']['timestamp']['field'] = 'timestamp';
    $handler->display->display_options['sorts']['timestamp']['order'] = 'DESC';
    $handler->display->display_options['sorts']['timestamp']['expose']['label'] = 'Upload date';
    /* Sort criterion: SUM(File Usage: Use count) */
    $handler->display->display_options['sorts']['count']['id'] = 'count';
    $handler->display->display_options['sorts']['count']['table'] = 'file_usage';
    $handler->display->display_options['sorts']['count']['field'] = 'count';
    $handler->display->display_options['sorts']['count']['group_type'] = 'sum';
    $handler->display->display_options['sorts']['count']['expose']['label'] = 'Use count';
    /* Filter criterion: File: Status */
    $handler->display->display_options['filters']['status']['id'] = 'status';
    $handler->display->display_options['filters']['status']['table'] = 'file_managed';
    $handler->display->display_options['filters']['status']['field'] = 'status';
    $handler->display->display_options['filters']['status']['value'] = array(
      1 => '1',
    );
    /* Filter criterion: File: Name */
    $handler->display->display_options['filters']['filename']['id'] = 'filename';
    $handler->display->display_options['filters']['filename']['table'] = 'file_managed';
    $handler->display->display_options['filters']['filename']['field'] = 'filename';
    $handler->display->display_options['filters']['filename']['operator'] = 'contains';
    $handler->display->display_options['filters']['filename']['exposed'] = TRUE;
    $handler->display->display_options['filters']['filename']['expose']['operator_id'] = 'filename_op';
    $handler->display->display_options['filters']['filename']['expose']['label'] = 'File name';
    $handler->display->display_options['filters']['filename']['expose']['operator'] = 'filename_op';
    $handler->display->display_options['filters']['filename']['expose']['identifier'] = 'filename';
    /* Filter criterion: File: Media Subject (field_media_subject) */
    $handler->display->display_options['filters']['field_media_subject_tid']['id'] = 'field_media_subject_tid';
    $handler->display->display_options['filters']['field_media_subject_tid']['table'] = 'field_data_field_media_subject';
    $handler->display->display_options['filters']['field_media_subject_tid']['field'] = 'field_media_subject_tid';
    $handler->display->display_options['filters']['field_media_subject_tid']['exposed'] = TRUE;
    $handler->display->display_options['filters']['field_media_subject_tid']['expose']['operator_id'] = 'field_media_subject_tid_op';
    $handler->display->display_options['filters']['field_media_subject_tid']['expose']['label'] = 'Subject';
    $handler->display->display_options['filters']['field_media_subject_tid']['expose']['operator'] = 'field_media_subject_tid_op';
    $handler->display->display_options['filters']['field_media_subject_tid']['expose']['identifier'] = 'field_media_subject_tid';
    $handler->display->display_options['filters']['field_media_subject_tid']['expose']['multiple'] = TRUE;
    $handler->display->display_options['filters']['field_media_subject_tid']['expose']['remember_roles'] = array(
      2 => '2',
      1 => 0,
      3 => 0,
      4 => 0,
      5 => 0,
    );
    $handler->display->display_options['filters']['field_media_subject_tid']['type'] = 'select';
    $handler->display->display_options['filters']['field_media_subject_tid']['vocabulary'] = 'media_subject';
    /* Filter criterion: File: Media Tags (field_media_tags) */
    $handler->display->display_options['filters']['field_media_tags_tid']['id'] = 'field_media_tags_tid';
    $handler->display->display_options['filters']['field_media_tags_tid']['table'] = 'field_data_field_media_tags';
    $handler->display->display_options['filters']['field_media_tags_tid']['field'] = 'field_media_tags_tid';
    $handler->display->display_options['filters']['field_media_tags_tid']['value'] = '';
    $handler->display->display_options['filters']['field_media_tags_tid']['exposed'] = TRUE;
    $handler->display->display_options['filters']['field_media_tags_tid']['expose']['operator_id'] = 'field_media_tags_tid_op';
    $handler->display->display_options['filters']['field_media_tags_tid']['expose']['label'] = 'Tags';
    $handler->display->display_options['filters']['field_media_tags_tid']['expose']['operator'] = 'field_media_tags_tid_op';
    $handler->display->display_options['filters']['field_media_tags_tid']['expose']['identifier'] = 'field_media_tags_tid';
    $handler->display->display_options['filters']['field_media_tags_tid']['expose']['multiple'] = TRUE;
    $handler->display->display_options['filters']['field_media_tags_tid']['expose']['remember_roles'] = array(
      2 => '2',
      1 => 0,
      3 => 0,
      4 => 0,
      5 => 0,
    );
    $handler->display->display_options['filters']['field_media_tags_tid']['vocabulary'] = 'media_tags';
    /* Filter criterion: File: Source File Name (field_source_file_name) */
    $handler->display->display_options['filters']['field_source_file_name_value']['id'] = 'field_source_file_name_value';
    $handler->display->display_options['filters']['field_source_file_name_value']['table'] = 'field_data_field_source_file_name';
    $handler->display->display_options['filters']['field_source_file_name_value']['field'] = 'field_source_file_name_value';
    $handler->display->display_options['filters']['field_source_file_name_value']['operator'] = 'contains';
    $handler->display->display_options['filters']['field_source_file_name_value']['exposed'] = TRUE;
    $handler->display->display_options['filters']['field_source_file_name_value']['expose']['operator_id'] = 'field_source_file_name_value_op';
    $handler->display->display_options['filters']['field_source_file_name_value']['expose']['label'] = 'Source File Name';
    $handler->display->display_options['filters']['field_source_file_name_value']['expose']['operator'] = 'field_source_file_name_value_op';
    $handler->display->display_options['filters']['field_source_file_name_value']['expose']['identifier'] = 'field_source_file_name_value';
    $handler->display->display_options['filters']['field_source_file_name_value']['expose']['remember_roles'] = array(
      2 => '2',
      1 => 0,
      3 => 0,
      4 => 0,
      5 => 0,
    );
    /* Filter criterion: Content: Title */
    $handler->display->display_options['filters']['title']['id'] = 'title';
    $handler->display->display_options['filters']['title']['table'] = 'node';
    $handler->display->display_options['filters']['title']['field'] = 'title';
    $handler->display->display_options['filters']['title']['relationship'] = 'field_event_location_target_id';
    $handler->display->display_options['filters']['title']['operator'] = 'contains';
    $handler->display->display_options['filters']['title']['exposed'] = TRUE;
    $handler->display->display_options['filters']['title']['expose']['operator_id'] = 'title_op';
    $handler->display->display_options['filters']['title']['expose']['label'] = 'Location';
    $handler->display->display_options['filters']['title']['expose']['operator'] = 'title_op';
    $handler->display->display_options['filters']['title']['expose']['identifier'] = 'title';
    $handler->display->display_options['filters']['title']['expose']['remember_roles'] = array(
      2 => '2',
      1 => 0,
      3 => 0,
      4 => 0,
      5 => 0,
    );
    /* Filter criterion: File: Mime type */
    $handler->display->display_options['filters']['filemime']['id'] = 'filemime';
    $handler->display->display_options['filters']['filemime']['table'] = 'file_managed';
    $handler->display->display_options['filters']['filemime']['field'] = 'filemime';
    $handler->display->display_options['filters']['filemime']['operator'] = '!=';
    $handler->display->display_options['filters']['filemime']['value'] = 'application/pdf';
    $handler->display->display_options['filters']['filemime']['exposed'] = TRUE;
    $handler->display->display_options['filters']['filemime']['expose']['operator_id'] = 'filemime_op';
    $handler->display->display_options['filters']['filemime']['expose']['label'] = 'Mime type';
    $handler->display->display_options['filters']['filemime']['expose']['operator'] = 'filemime_op';
    $handler->display->display_options['filters']['filemime']['expose']['identifier'] = 'filemime';
    $handler->display->display_options['filters']['filemime']['expose']['remember_roles'] = array(
      2 => '2',
      1 => 0,
      3 => 0,
      4 => 0,
      5 => 0,
    );
    $handler->display->display_options['filters']['filemime']['is_grouped'] = TRUE;
    $handler->display->display_options['filters']['filemime']['group_info']['label'] = 'File Type';
    $handler->display->display_options['filters']['filemime']['group_info']['identifier'] = 'filemime';
    $handler->display->display_options['filters']['filemime']['group_info']['optional'] = FALSE;
    $handler->display->display_options['filters']['filemime']['group_info']['widget'] = 'radios';
    $handler->display->display_options['filters']['filemime']['group_info']['default_group'] = '1';
    $handler->display->display_options['filters']['filemime']['group_info']['group_items'] = array(
      1 => array(
        'title' => 'Images',
        'operator' => '!=',
        'value' => 'application/pdf',
      ),
      2 => array(
        'title' => 'PDFs',
        'operator' => '=',
        'value' => 'application/pdf',
      ),
    );

    /* Display: Media browser */
    $handler = $view->new_display('media_browser', 'Media browser', 'media_browser_1');
    $handler->display->display_options['defaults']['title'] = FALSE;
    $handler->display->display_options['title'] = 'Library';
    $handler->display->display_options['defaults']['hide_admin_links'] = FALSE;

    /* Display: My files */
    $handler = $view->new_display('media_browser', 'My files', 'media_browser_my_files');
    $handler->display->display_options['defaults']['title'] = FALSE;
    $handler->display->display_options['title'] = 'My files';
    $handler->display->display_options['defaults']['hide_admin_links'] = FALSE;
    $handler->display->display_options['defaults']['access'] = FALSE;
    $handler->display->display_options['access']['type'] = 'perm';
    $handler->display->display_options['access']['perm'] = 'view own files';
    $handler->display->display_options['defaults']['relationships'] = FALSE;
    /* Relationship: File: User who uploaded */
    $handler->display->display_options['relationships']['uid']['id'] = 'uid';
    $handler->display->display_options['relationships']['uid']['table'] = 'file_managed';
    $handler->display->display_options['relationships']['uid']['field'] = 'uid';
    $handler->display->display_options['relationships']['uid']['required'] = TRUE;
    $handler->display->display_options['defaults']['arguments'] = FALSE;
    $handler->display->display_options['defaults']['filter_groups'] = FALSE;
    $handler->display->display_options['defaults']['filters'] = FALSE;
    /* Filter criterion: File: Status */
    $handler->display->display_options['filters']['status']['id'] = 'status';
    $handler->display->display_options['filters']['status']['table'] = 'file_managed';
    $handler->display->display_options['filters']['status']['field'] = 'status';
    $handler->display->display_options['filters']['status']['value'] = array(
      1 => '1',
    );
    /* Filter criterion: File: Name */
    $handler->display->display_options['filters']['filename']['id'] = 'filename';
    $handler->display->display_options['filters']['filename']['table'] = 'file_managed';
    $handler->display->display_options['filters']['filename']['field'] = 'filename';
    $handler->display->display_options['filters']['filename']['operator'] = 'contains';
    $handler->display->display_options['filters']['filename']['exposed'] = TRUE;
    $handler->display->display_options['filters']['filename']['expose']['operator_id'] = 'filename_op';
    $handler->display->display_options['filters']['filename']['expose']['label'] = 'File name';
    $handler->display->display_options['filters']['filename']['expose']['operator'] = 'filename_op';
    $handler->display->display_options['filters']['filename']['expose']['identifier'] = 'filename';
    /* Filter criterion: File: Type */
    $handler->display->display_options['filters']['type']['id'] = 'type';
    $handler->display->display_options['filters']['type']['table'] = 'file_managed';
    $handler->display->display_options['filters']['type']['field'] = 'type';
    $handler->display->display_options['filters']['type']['exposed'] = TRUE;
    $handler->display->display_options['filters']['type']['expose']['operator_id'] = 'type_op';
    $handler->display->display_options['filters']['type']['expose']['label'] = 'Type';
    $handler->display->display_options['filters']['type']['expose']['operator'] = 'type_op';
    $handler->display->display_options['filters']['type']['expose']['identifier'] = 'type';
    /* Filter criterion: User: Current */
    $handler->display->display_options['filters']['uid_current']['id'] = 'uid_current';
    $handler->display->display_options['filters']['uid_current']['table'] = 'users';
    $handler->display->display_options['filters']['uid_current']['field'] = 'uid_current';
    $handler->display->display_options['filters']['uid_current']['relationship'] = 'uid';
    $handler->display->display_options['filters']['uid_current']['value'] = '1';

    $views['media_default'] = $view;
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function uclalib_media_field_formatter_info() {
  return array(
    'uclalib_media_file_link' => array(
      'label' => t('Simple link to file'),
      'field types' => array('file'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function uclalib_media_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'uclalib_media_file_link':
      foreach ($items as $delta => $item) {
        $file = (object) $item;
        $element[$delta] = array(
          '#theme' => 'simple_file_link',
          '#file' => $file
        );
      }

      break;
  }

  return $element;
}

/**
 * Implements hook_theme().
 */
function uclalib_media_theme() {
  return array(
    'simple_file_link' => array(
      'variables' => array('file' => NULL),
    ),
  );
}

/**
 * Returns HTML for a simple link to a file.
 *
 * @param $variables
 *   An associative array containing:
 *   - file: A file object to which the link will be created.
 */
function theme_simple_file_link($variables) {
  $file = $variables['file'];

  $url = file_create_url($file->uri);

  // Set options as per anchor format described at
  // http://microformats.org/wiki/file-format-examples
  $options = array(
    'attributes' => array(
      'type' => $file->filemime . '; length=' . $file->filesize,
    ),
  );

  // Use the description as the link text if available.
  if (!empty($file->field_title)) {
    $link_text = $file->field_title[LANGUAGE_NONE][0]['safe_value'];
  }
  else {
    $link_text = check_plain($file->filename);
    $options['attributes']['title'] = check_plain($file->filename);
  }

  return '<span class="file">' . l($link_text, $url, $options) . '</span>';
}

